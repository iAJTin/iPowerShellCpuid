<?xml version="1.0"?>
<doc>
    <assembly>
        <name>iPowerShellCpuid</name>
    </assembly>
    <members>
        <member name="T:PowerShellCpuid.CmdLets.GetCpuidImplementedPropertiesCmdlet">
             <summary>
             <para type="synopsis">Returns a collection of elements where each element represents an implemented property for given leaf, optionally you can specify the subleaf.</para>
             <para type="description">The elements are suitable to be used in the 'Get-CpuidProperty' operation as an input parameter of the '-Property' parameter.</para>
             </summary>
             <example>
               <code>
                 If the CPUID instruction is not available, it always returns the message 'Can not continue. CPUID instruction is not available in this system'.
             
                 PS> Get-CpuidImplementedProperties -Leaf ProcessorInfoAndFeatures | CPUID-Implemented-Properties -Leaf ProcessorInfoAndFeatures
                 Get-CpuidImplementedProperties : Can not continue. CPUID instruction is not available in this system
                 ...
                 ...
                 ...
               </code>
             </example>
             <example>
               <code>
                 The output may be different (depending on your system)!!!
            
                 The following example shows how to get the all implemented properties for the 'BasicInformation' CPUID leaf.
                 The search result returns a collection of objects with the property information.
                 The data type of the elements of the collection is suitable to be used as an input value in the '-Property' parameter
                 of the Get-CpuidProperty operation.
             
                 PS> Get-CpuidImplementedProperties -Leaf BasicInformation | CPUID-Implemented-Properties -Leaf BasicInformation
             
                 HexadecimalLeafId             Leaf SubLeaf PropertyKey
                 -----------------             ---- ------- -----------
                 00000000          BasicInformation Main Structure = BasicInformation, Property = HighestBasicFunction, Unit = None
                 00000000          BasicInformation Main Structure = BasicInformation, Property = Manufacturer, Unit = None
               </code>
             </example>
             <example>
               <code>
                 The output may be different (depending on your system)!!!
            
                 The following example shows how to get the all implemented properties for the 'DeterministicCacheParameters' CPUID leaf and 'One' sub-leaf.
                 The search result returns a collection of objects with the property information.
                 The data type of the elements of the collection is suitable to be used as an input value in the '-Property' parameter
                 of the Get-CpuidProperty operation.
             
                 PS> Get-CpuidImplementedProperties -Leaf DeterministicCacheParameters -SubLeaf One | CPUID-Implemented-Properties -Leaf DeterministicCacheParameters -SubLeaf One
             
                 HexadecimalLeafId                         Leaf SubLeaf PropertyKey
                 -----------------                         ---- ------- -----------
                 00000004          DeterministicCacheParameters     One Structure = DeterministicCacheParameters, Property = CacheSize, Unit = Bytes
                 00000004          DeterministicCacheParameters     One Structure = DeterministicCacheParameters, Property = CacheLevel, Unit = None
                 00000004          DeterministicCacheParameters     One Structure = DeterministicCacheParameters, Property = CacheType, Unit = None
                 00000004          DeterministicCacheParameters     One Structure = DeterministicCacheParameters, Property = WriteBack, Unit = None
                 00000004          DeterministicCacheParameters     One Structure = DeterministicCacheParameters, Property = UseDirectMappedCache, Unit = None
                 00000004          DeterministicCacheParameters     One Structure = DeterministicCacheParameters, Property = IsFullyAssociativeCache, Unit = None
                 00000004          DeterministicCacheParameters     One Structure = DeterministicCacheParameters, Property = IsCacheInclusiveOfLowerLevels, Unit = None
                 00000004          DeterministicCacheParameters     One Structure = DeterministicCacheParameters, Property = IsSelfInitializingCacheLevel, Unit = None
                 00000004          DeterministicCacheParameters     One Structure = DeterministicCacheParameters, Property = MaximumLogicalProcessorCores, Unit = None
                 00000004          DeterministicCacheParameters     One Structure = DeterministicCacheParameters, Property = MaximumPhysicalProcessorCores, Unit = None
               </code>
            </example>
        </member>
        <member name="P:PowerShellCpuid.CmdLets.GetCpuidImplementedPropertiesCmdlet.Leaf">
            <summary>
            Gets or sets a value that contains the name of the leaf.
            <para type="description">Leaf name</para>
            </summary>
            <value>
            One of the values of the <see cref="P:PowerShellCpuid.CmdLets.GetCpuidImplementedPropertiesCmdlet.Leaf"/> enumeration.
            </value>
        </member>
        <member name="P:PowerShellCpuid.CmdLets.GetCpuidImplementedPropertiesCmdlet.SubLeaf">
            <summary>
            Gets or sets a value that contains the name of the sub-leaf. This value is optional.
            <para type="description">Optional subleaf name</para>
            </summary>
            <value>
            One of the values of the <see cref="P:PowerShellCpuid.CmdLets.GetCpuidImplementedPropertiesCmdlet.SubLeaf"/> enumeration.
            </value>
        </member>
        <member name="M:PowerShellCpuid.CmdLets.GetCpuidImplementedPropertiesCmdlet.ProcessRecord">
            <summary>
            Process the command.
            </summary>
        </member>
        <member name="T:PowerShellCpuid.CmdLets.GetCpuidImplementedLeafsCmdlet">
             <summary>
             <para type="synopsis">Returns a collection of elements where each element represents an implemented leaf.</para>
             </summary>
             <example>
               <code>
                 If the CPUID instruction is not available, it always returns the message 'Can not continue. CPUID instruction is not available in this system'.
             
                 PS> Get-CPUIDImplementedLeafs
                 Get-CPUIDImplementedLeafs : Can not continue. CPUID instruction is not available in this system
                 ...
                 ...
                 ...
               </code>
             </example>
             <example>
               <code>
                 The output may be different (depending on your system)!!!
            
                 PS> Get-CPUIDImplementedLeafs | CPUID-Implemented-Leafs
             
                    LeafId HexadecimalLeafId                                       Leaf
                    ------ -----------------                                       ----
                         0 00000000                                    BasicInformation
                         1 00000001                            ProcessorInfoAndFeatures
                         2 00000002                                    CacheInformation
                         3 00000003                               ProcessorSerialNumber
                         4 00000004                        DeterministicCacheParameters
                         5 00000005                             MonitorAndMwaitFeatures
                         6 00000006                   ThermalAndPowerManagementFeatures
                         7 00000007                                    ExtendedFeatures
                         9 00000009                        DirectCacheAccessInformation
                        10 0000000A          ArchitecturalPerformanceMonitoringFeatures
                        11 0000000B                         ExtendedTopologyInformation
                        13 0000000D                  ProcessorExtendedStatesInformation
                        15 0000000F                ResourceDirectorTechnologyMonitoring
                        16 00000010                ResourceDirectorTechnologyAllocation
                        18 00000012                                                 Sgx
                        20 00000014                ProcessorTraceEnumerationInformation
                        21 00000015          TimeStampCounterAndNominalCoreCrystalClock
               -2147483648 80000000                  HighestExtendedFunctionImplemented
               -2147483647 80000001                    ExtendedProcessorInfoAndFeatures
               -2147483646 80000002                                ProcessorBrandString
               -2147483645 80000003                               ProcessorBrandString1
               -2147483644 80000004                               ProcessorBrandString2
               -2147483643 80000005                            L1CacheAndTlbIdentifiers
               -2147483642 80000006                             ExtendedL2CacheFeatures
               -2147483641 80000007                             AdvancedPowerManagement
               </code>
            </example>
        </member>
        <member name="M:PowerShellCpuid.CmdLets.GetCpuidImplementedLeafsCmdlet.ProcessRecord">
            <summary>
            Process the command.
            </summary>
        </member>
        <member name="T:PowerShellCpuid.CmdLets.GetCpuidPropertyDetailCmdlet">
             <summary>
             <para type="synopsis">
             Returns a reference that contains the complete data of the given property, includes its name, value, unit in which the property is expressed, description and leaf to which it belongs.
             </para>
             <para type="description">
             The value of the property <b>Property</b> must be obtained by calling the <b>Get-CpuidProperty</b>, for more information see the help
             for the <b>Get-CpuidProperty</b> and the sample examples below.
             </para>
             </summary>
             <example>
               <code>
                 The output may be different (depending on your system)!!!
             
                 To do this, first by calling 'Get-CpuidLocateProperty', we search among all the available properties of our system for those that call 'Manufacturer'
                 and then with the result obtained, the 'Get-CpuidProperty' call tries to obtain the property information, remember that a property it is made up of your key and its value.
                 Finally we call 'Get-CpuidPropertyDetail' to obtain all the available information about the 'Manufacturer' property.
             
                 PS> Get-CpuidPropertyDetail -Property (Get-CpuidProperty -Property (Get-CpuidLocateProperty -Name Manufacturer)) | CPUID-Property-Detail -Property (CPUID-Property -Property (CPUID-Locate-Property -Name Manufacturer))
            
                 Name         : Manufacturer
                 Value        : GenuineIntel
                 Units        : None
                 Leaf         : BasicInformation
                 FriendlyName : Manufacturer
                 Description  : CPU's manufacturer ID string
             
               </code>
             </example>
             <example>
               <code>
                 The output may be different (depending on your system)!!!
             
                 To do this, first by calling 'Get-CpuidLocateProperty', we search among all the available properties of our system for those that call 'CacheSize' and belong to sub-leaf 'Two'.
                 After the 'Get-CpuidProperty' call tries to obtain the property information with the result obtained, remember that a property consists of its key and its value.
                 Finally we call 'Get-CpuidPropertyDetail' to obtain all the available information about the 'CacheSize' property.
             
                 PS> Get-CpuidPropertyDetail -Property (Get-CpuidProperty -Property (Get-CpuidLocateProperty -Name CacheSize -SubLeaf Two)) | CPUID-Property-Detail -Property (CPUID-Property -Property (CPUID-Locate-Property -Name CacheSize -SubLeaf Two))
            
                 Name         : CacheSize
                 Value        : 262144
                 Units        : Bytes
                 Leaf         : DeterministicCacheParameters
                 FriendlyName : Cache Size
                 Description  : Cache Size in Bytes
             
               </code>
             </example>
             <example>
               <code>
                 The output may be different (depending on your system)!!!
             
                 To do this, first by calling 'Get-CpuidLocateProperty', we search among all the available properties of our system for those that call 'AVX2'
                 and then with the result obtained, the 'Get-CpuidProperty' call tries to obtain the property information, remember that a property it is made up of your key and its value.
                 Finally we call 'Get-CpuidPropertyDetail' to obtain all the available information about the 'AVX2' property.
             
                 PS> Get-CpuidPropertyDetail -Property (Get-CpuidProperty -Property (Get-CpuidLocateProperty -Name AVX2)) | CPUID-Property-Detail -Property (CPUID-Property -Property (CPUID-Locate-Property -Name AVX2))
            
                 Name         : AVX2
                 Value        : True
                 Units        : None
                 Leaf         : ExtendedFeatures
                 FriendlyName : AVX2
                 Description  : Advanced Vector Extensions 2
             
               </code>
             </example>
        </member>
        <member name="P:PowerShellCpuid.CmdLets.GetCpuidPropertyDetailCmdlet.Property">
            <summary>
            Gets or sets a value that contains the property information.
            <para type="description">A <see cref="T:iTin.Core.Hardware.Common.PropertyItem"/> instance.</para>
            </summary>
            <value>
            A <see cref="T:iTin.Core.Hardware.Common.PropertyItem"/> reference that contains the property information.
            </value>
        </member>
        <member name="M:PowerShellCpuid.CmdLets.GetCpuidPropertyDetailCmdlet.ProcessRecord">
            <summary>
            Process the command.
            </summary>
        </member>
        <member name="T:PowerShellCpuid.CmdLets.GetCpuidPropertyCmdlet">
             <summary>
             <para type="synopsis">
             Returns a reference that contains the information associated with the given property such as the key that identifies the property and its value.
             </para>
             <para type="description">
             The value of the property <b>Property</b> must be obtained by calling the <b>Get-CpuidLocateProperty</b>, for more information see the help
             for the <b>Get-CpuidLocateProperty</b> and the sample examples below.
             </para>
             </summary>
             <example>
               <code>
                 If the CPUID instruction is not available, it always returns the message 'Can not continue. CPUID instruction is not available in this system'.
             
                 PS> Get-CpuidProperty -Property (Get-CpuidLocateProperty -Name Manufacturer) | CPUID-Property -Property (CPUID-Locate-Property -Name Manufacturer)
                 Get-CpuidProperty : Can not continue. CPUID instruction is not available in this system
                 ...
                 ...
                 ...
               </code>
             </example>
             <example>
               <code>
                 The output may be different (depending on your system)!!!
             
                 To do this, first by calling 'Get-CpuidLocateProperty', we search among all the available properties of our system for those that call 'Manufacturer'
                 and then with the result obtained, the 'Get-CpuidProperty' call tries to obtain the property information, remember that a property it is made up of your key and its value.
             
                 PS> Get-CpuidProperty -Property (Get-CpuidLocateProperty -Name Manufacturer) | CPUID-Property -Property (CPUID-Locate-Property -Name Manufacturer)
            
                 Key                                                                Value
                 ---                                                                -----
                 Structure = BasicInformation, Property = Manufacturer, Unit = None GenuineIntel
               </code>
             </example>
             <example>
               <code>
                 The output may be different (depending on your system)!!!
             
                 To do this, first by calling 'Get-CpuidLocateProperty', we search among all the available properties of our system for those that call 'CacheSize' and belong to sub-leaf 'Two'.
                 After the 'Get-CpuidProperty' call tries to obtain the property information with the result obtained, remember that a property consists of its key and its value.
             
                 PS> Get-CpuidProperty -Property (Get-CpuidLocateProperty -Name CacheSize -SubLeaf Two) | CPUID-Property -Property (CPUID-Locate-Property -Name CacheSize -SubLeaf Two)
            
                 Key                                                                           Value
                 ---                                                                           -----
                 Structure = DeterministicCacheParameters, Property = CacheSize, Unit = Bytes 262144
               </code>
             </example>
        </member>
        <member name="P:PowerShellCpuid.CmdLets.GetCpuidPropertyCmdlet.Property">
            <summary>
            Gets or sets a value that contains the location property data.
            <para type="description">A <see cref="T:PowerShellCpuid.CmdLets.Results.PropertyDefinitionResult"/> instance.</para>
            </summary>
            <value>
            A <see cref="T:PowerShellCpuid.CmdLets.Results.PropertyDefinitionResult"/> reference that contains the location property data.
            </value>
        </member>
        <member name="M:PowerShellCpuid.CmdLets.GetCpuidPropertyCmdlet.ProcessRecord">
            <summary>
            Process the command.
            </summary>
        </member>
        <member name="T:PowerShellCpuid.CmdLets.GetCpuidLocatePropertyCmdlet">
             <summary>
             <para type="synopsis">
             Returns a value that contains the location or locations of the cpuid property by its name.
             </para>
             <para type="description"> 
             If you get multiple results you can filter the result indicating the specific leaf and sub-leaf. For more information, please see the examples below.
             </para>
             </summary>
             <example>
               <code>
                 If the CPUID instruction is not available, it always returns the message 'Can not continue. CPUID instruction is not available in this system'.
             
                 PS> Get-CpuidLocateProperty -Name Manufacturer
                 Get-CpuidLocateProperty : Can not continue. CPUID instruction is not available in this system
                 ...
                 ...
                 ...
               </code>
             </example>
             <example>
               <code>
                 The output may be different (depending on your system)!!!
            
                 The following example shows how to get the location of the 'Manufacturer' property.
                 The result of the search tells us that it belongs to the 'BasicInformation' leaf and is located in the 'Main' sub-leaf,
                 additionally the 'Structure' property stores the key that identifies this property.
             
                 Notice, as it only returns one element.
             
                 PS> Get-CpuidLocateProperty -Name Manufacturer | CPUID-Locate-Property -Name Manufacturer
            
                             Leaf SubLeaf HexadecimalLeafId PropertyKey
                             ---- ------- ----------------- -----------
                 BasicInformation    Main 00000000          Structure = BasicInformation, Property = Manufacturer, Unit = None
             
               </code>
             </example>
             <example>
               <code>
                 The output may be different (depending on your system)!!!
            
                 The following example shows how to get the location of the 'CacheSize' property.
                 The result of the search tells us that it belongs to the 'DeterministicCacheParameters' and 'ExtendedL2CacheFeatures' leafs and is also found in several sub-leafs.
             
                 Notice, as it now returns an array containing the matches
             
                 PS> Get-CpuidLocateProperty -Name CacheSize | CPUID-Locate-Property -Name CacheSize
            
                                         Leaf SubLeaf HexadecimalLeafId PropertyKey
                                         ---- ------- ----------------- -----------
                 DeterministicCacheParameters    Main 00000004          Structure = DeterministicCacheParameters, Property = CacheSize, Unit = Bytes
                 DeterministicCacheParameters     One 00000004          Structure = DeterministicCacheParameters, Property = CacheSize, Unit = Bytes
                 DeterministicCacheParameters     Two 00000004          Structure = DeterministicCacheParameters, Property = CacheSize, Unit = Bytes
                 DeterministicCacheParameters   Three 00000004          Structure = DeterministicCacheParameters, Property = CacheSize, Unit = Bytes
                      ExtendedL2CacheFeatures    Main 80000006          Structure = ExtendedL2CacheFeatures, Property = CacheSize, Unit = KB
             
               </code>
             </example>
             <example>
               <code>
                 The output may be different (depending on your system)!!!
            
                 The following example shows how to get the location of the property 'CacheSize' but only that of the sub-leaf 'Two'.
            
                 Notice, as it only returns one element.
             
                 PS> Get-CpuidLocateProperty -Name CacheSize -SubLeaf Two | CPUID-Locate-Property -Name CacheSize -SubLeaf Two
            
                                         Leaf SubLeaf HexadecimalLeafId PropertyKey
                                         ---- ------- ----------------- -----------
                 DeterministicCacheParameters     Two 00000004          Structure = DeterministicCacheParameters, Property = CacheSize, Unit = Bytes
             
               </code>
             </example>
             <example>
               <code>
                 The output may be different (depending on your system)!!!
            
                 The following example shows how to get the location of the property 'CacheSize' but only that of the sub-leaf 'Main'.
             
                 Notice, as it now returns an array containing the matches
             
                 PS> Get-CpuidLocateProperty -Name CacheSize -SubLeaf Main | CPUID-Locate-Property -Name CacheSize -SubLeaf Main
            
                                         Leaf SubLeaf HexadecimalLeafId PropertyKey
                                         ---- ------- ----------------- -----------
                 DeterministicCacheParameters    Main 00000004          Structure = DeterministicCacheParameters, Property = CacheSize, Unit = Bytes
                      ExtendedL2CacheFeatures    Main 80000006          Structure = ExtendedL2CacheFeatures, Property = CacheSize, Unit = KB
             
               </code>
             </example>
             <example>
               <code>
                 The output may be different (depending on your system)!!!
            
                 The following example shows how to get the location of the 'CacheSize' property but only the one of the leaf 'ExtendedL2CacheFeatures' and sub-leaf 'Two'.
             
                 Notice, as it only returns one element.
             
                 PS> Get-CpuidLocateProperty -Name CacheSize -Leaf ExtendedL2CacheFeatures -SubLeaf Main | CPUID-Locate-Property -Name CacheSize -Leaf ExtendedL2CacheFeatures -SubLeaf Main
            
                                         Leaf SubLeaf HexadecimalLeafId PropertyKey
                                         ---- ------- ----------------- -----------
                      ExtendedL2CacheFeatures    Main 80000006          Structure = ExtendedL2CacheFeatures, Property = CacheSize, Unit = KB
             
               </code>
            </example>
        </member>
        <member name="P:PowerShellCpuid.CmdLets.GetCpuidLocatePropertyCmdlet.Name">
            <summary>
            Gets or sets a value that contains the name of the property to locate.
            <para type="description">The property name to locate.</para>
            </summary>
            <value>
            A <see cref="T:System.String"/> that contains the name of the property to locate.
            </value>
        </member>
        <member name="P:PowerShellCpuid.CmdLets.GetCpuidLocatePropertyCmdlet.Leaf">
            <summary>
            Gets or sets a value that contains the name of the leaf to which this property belongs. This value is optional.
            <para type="description">Optional leaf name</para>
            </summary>
            <value>
            One of the values of the <see cref="P:PowerShellCpuid.CmdLets.GetCpuidLocatePropertyCmdlet.Leaf"/> enumeration.
            </value>
        </member>
        <member name="P:PowerShellCpuid.CmdLets.GetCpuidLocatePropertyCmdlet.SubLeaf">
            <summary>
            Gets or sets a value that contains the name of the sub-leaf to which this property belongs. This value is optional.
            <para type="description">Optional subleaf name</para>
            </summary>
            <value>
            One of the values of the <see cref="P:PowerShellCpuid.CmdLets.GetCpuidLocatePropertyCmdlet.SubLeaf"/> enumeration.
            </value>
        </member>
        <member name="M:PowerShellCpuid.CmdLets.GetCpuidLocatePropertyCmdlet.ProcessRecord">
            <summary>
            Process the command.
            </summary>
        </member>
        <member name="T:PowerShellCpuid.CmdLets.GetCpuidSubLeafsCmdlet">
             <summary>
             <para type="synopsis">Returns all implemented sub-leafs for the given leaf.</para>
             <para type="description">Execute the CPUID instruction for the given leaf (eax register) and show all the sub-leafs it implements (ecx register).</para>
             </summary>
             <example>
               <code>
                 If the CPUID instruction is not available, it always returns the message 'Can not continue. CPUID instruction is not available in this system'.
             
                 PS> Get-CpuidSubLeafs -Leaf DeterministicCacheParameters
                 Get-CpuidSubLeafs : Can not continue. CPUID instruction is not available in this system
                 ...
                 ...
                 ...
               </code>
             </example>
             <example>
               <code>
                 The output may be different (depending on your system)!!!
            
                 Gets all implemented sub-leafs for 'Deterministic Cache Parameters' leaf
             
                 PS> Get-CpuidSubLeafs -Leaf DeterministicCacheParameters | Cpuid-Sub-Leafs -Leaf DeterministicCacheParameters
            
                                       Leaf SubLeaf
                                       ---- -------
               DeterministicCacheParameters Main
               DeterministicCacheParameters One
               DeterministicCacheParameters Two
               DeterministicCacheParameters Three
               </code>
             </example>
        </member>
        <member name="P:PowerShellCpuid.CmdLets.GetCpuidSubLeafsCmdlet.Leaf">
            <summary>
            Gets or sets a value that contains the name of the leaf to consult.
            <para type="description">The name of the leaf to consult.</para>
            </summary>
            <value>
            One of the values of the <see cref="P:PowerShellCpuid.CmdLets.GetCpuidSubLeafsCmdlet.Leaf"/> enumeration.
            </value>
        </member>
        <member name="M:PowerShellCpuid.CmdLets.GetCpuidSubLeafsCmdlet.ProcessRecord">
            <summary>
            Process the command.
            </summary>
        </member>
        <member name="T:PowerShellCpuid.CmdLets.GetCpuidIsAvailableCmdlet">
             <summary>
             <para type="synopsis">Returns a value that indicates whether this system supports the CPUID instruction.</para>
             </summary>
             <example>
               <code>
                 PS> Get-CpuidIsAvailable | CPUID-Is-Available
                 True   
               </code>
            </example>
        </member>
        <member name="M:PowerShellCpuid.CmdLets.GetCpuidIsAvailableCmdlet.ProcessRecord">
            <summary>
            Process the command.
            </summary>
        </member>
        <member name="T:PowerShellCpuid.CmdLets.Results.PropertyDetailResult">
            <summary>
            Class that defines the detail of a <see cref="T:iTin.Hardware.Specification.CPUID"/> property.
            </summary>
        </member>
        <member name="P:PowerShellCpuid.CmdLets.Results.PropertyDetailResult.Name">
            <summary>
            Gets or sets a value that contains the property name.
            <para type="description">Property name.</para>
            </summary>
            <value>
            Property name.
            </value>
        </member>
        <member name="P:PowerShellCpuid.CmdLets.Results.PropertyDetailResult.Value">
            <summary>
            Gets or sets a value that contains the property value.
            <para type="description">Property value.</para>
            </summary>
            <value>
            Property value.
            </value>
        </member>
        <member name="P:PowerShellCpuid.CmdLets.Results.PropertyDetailResult.Units">
            <summary>
            Gets a value that contains the property units.
            <para type="description">Property units.</para>
            </summary>
            <value>
            Property units.
            </value>
        </member>
        <member name="P:PowerShellCpuid.CmdLets.Results.PropertyDetailResult.Leaf">
            <summary>
            Gets or sets a value that contains the leaf name to which this property belongs.
            <para type="description">Leaf name to which this property belongs.</para>
            </summary>
            <value>
            Leaf name to which this property belongs.
            </value>
        </member>
        <member name="P:PowerShellCpuid.CmdLets.Results.PropertyDetailResult.FriendlyName">
            <summary>
            Gets or sets a value that contains the friendly property name.
            <para type="description">Friendly property name.</para>
            </summary>
            <value>
            Friendly property name.
            </value>
        </member>
        <member name="P:PowerShellCpuid.CmdLets.Results.PropertyDetailResult.Description">
            <summary>
            Gets or sets a value that contains the property description.
            <para type="description">Property description.</para>
            </summary>
            <value>
            Property description.
            </value>
        </member>
        <member name="T:PowerShellCpuid.CmdLets.Results.PropertyDefinitionResult">
            <summary>
            Class that defines the location of a <see cref="T:iTin.Hardware.Specification.CPUID"/> property.
            </summary>
        </member>
        <member name="P:PowerShellCpuid.CmdLets.Results.PropertyDefinitionResult.HexadecimalLeafId">
            <summary>
            Gets a value that contains the hexadecimal representation of the leaf to which this property belongs.
            <para type="description">Hexadecimal representation of the leaf to which this property belongs.</para>
            </summary>
            <value>
            A <see cref="T:System.String"/> that contains the hexadecimal representation of the leaf.
            </value>
        </member>
        <member name="P:PowerShellCpuid.CmdLets.Results.PropertyDefinitionResult.Leaf">
            <summary>
            Gets or sets a value that contains the name of the leaf to which this property belongs.
            <para type="description">Name of the leaf to which this property belongs.</para>
            </summary>
            <value>
            One of the values of the <see cref="P:PowerShellCpuid.CmdLets.Results.PropertyDefinitionResult.Leaf"/> enumeration.
            </value>
        </member>
        <member name="P:PowerShellCpuid.CmdLets.Results.PropertyDefinitionResult.SubLeaf">
            <summary>
            Gets or sets a value that contains the name of the sub-leaf to which this property belongs.
            <para type="description">Name of the sub-leaf to which this property belongs.</para>
            </summary>
            <value>
            One of the values of the <see cref="P:PowerShellCpuid.CmdLets.Results.PropertyDefinitionResult.SubLeaf"/> enumeration.
            </value>
        </member>
        <member name="P:PowerShellCpuid.CmdLets.Results.PropertyDefinitionResult.PropertyKey">
            <summary>
            Gets or sets a value containing key that represents the property.
            <para type="description">Key that represents the property.</para>
            </summary>
            <value>
            An instance that implements the <see cref="T:iTin.Core.Hardware.Common.IPropertyKey"/> interface that represents the key of the property.
            </value>
        </member>
        <member name="T:PowerShellCpuid.CmdLets.Results.SubLeafResult">
            <summary>
            Class that defines the <see cref="P:PowerShellCpuid.CmdLets.Results.SubLeafResult.SubLeaf"/> query consult.
            </summary>
        </member>
        <member name="P:PowerShellCpuid.CmdLets.Results.SubLeafResult.Leaf">
            <summary>
            Gets or sets a value that represents a leaf.
            <para type="description">Name of the leaf.</para>
            </summary>
            <value>
            One of the values of the <see cref="P:PowerShellCpuid.CmdLets.Results.SubLeafResult.Leaf"/> enumeration.
            </value>
        </member>
        <member name="P:PowerShellCpuid.CmdLets.Results.SubLeafResult.SubLeaf">
            <summary>
            Gets or sets a value that represents a sub-leaf.
            <para type="description">Name of the sub-leaf.</para>
            </summary>
            <value>
            One of the values of the <see cref="P:PowerShellCpuid.CmdLets.Results.SubLeafResult.SubLeaf"/> enumeration.
            </value>
        </member>
        <member name="T:PowerShellCpuid.CmdLets.Results.LeafResult">
            <summary>
            Class that defines the <see cref="P:PowerShellCpuid.CmdLets.Results.LeafResult.Leaf"/> query consult.
            </summary>
        </member>
        <member name="P:PowerShellCpuid.CmdLets.Results.LeafResult.Leaf">
            <summary>
            Gets or sets a value that represents a leaf.
            <para type="description">Name of the leaf.</para>
            </summary>
            <value>
            One of the values of the <see cref="P:PowerShellCpuid.CmdLets.Results.LeafResult.Leaf"/> enumeration.
            </value>
        </member>
        <member name="P:PowerShellCpuid.CmdLets.Results.LeafResult.LeafId">
            <summary>
            Gets a value that contains the numeric representation of the leaf
            <para type="description">Numeric representation of the leaf.</para>
            </summary>
            <value>
            A <see cref="T:System.Int32"/> that contains the numeric representation of the leaf.
            </value>
        </member>
        <member name="P:PowerShellCpuid.CmdLets.Results.LeafResult.HexadecimalLeafId">
            <summary>
            Gets a value that contains the hexadecimal representation of the leaf
            <para type="description">Hexadecimal representation of the leaf.</para>
            </summary>
            <value>
            A <see cref="T:System.String"/> that contains the hexadecimal representation of the leaf.
            </value>
        </member>
        <member name="T:PowerShellCpuid.Helpers.TypeExtensions">
            <summary>
            Static class for handle <see cref="T:System.Type"/> type.
            </summary>
        </member>
        <member name="M:PowerShellCpuid.Helpers.TypeExtensions.GetPropertyKey(System.Type,System.String)">
            <summary>
            Returns by reflection the property value for a given leaf type.
            </summary>
            <param name="leafType">Target leaf type</param>
            <param name="propertyName">Property name to recover</param>
            <returns>
            An instance that implements a <see cref="T:iTin.Core.Hardware.Common.IPropertyKey"/> interface that represents the key of property.
            </returns>
        </member>
        <member name="T:PowerShellCpuid.Helpers.MessageHelper">
            <summary>
            Static class for handle the known error messages.
            </summary>
        </member>
        <member name="P:PowerShellCpuid.Helpers.MessageHelper.CanNotContinueErrorRecord">
            <summary>
            Build a <see cref="T:System.Management.Automation.ErrorRecord"/> when <see cref="T:iTin.Hardware.Specification.CPUID"/> instruction is not available in this system
            </summary>
            <returns>
            A <see cref="T:System.Management.Automation.ErrorRecord"/> reference that contains error message when CPUID instruction is not available in this system.
            </returns>
        </member>
        <member name="T:PowerShellCpuid.Helpers.CreatorHelper">
            <summary>
            Static class for handle <see cref="T:iTin.Hardware.Specification.CPUID"/> properties.
            </summary>
        </member>
        <member name="M:PowerShellCpuid.Helpers.CreatorHelper.CreatePropertyKeyFromArguments(System.String,System.String)">
            <summary>
            Returns the property key for a given leaf and property name.
            </summary>
            <param name="leafName">Target leaf name</param>
            <param name="propertyName">Property name to recover</param>
            <returns>
            An instance that implements a <see cref="T:iTin.Core.Hardware.Common.IPropertyKey"/> interface that represents the key of property.
            </returns>
        </member>
    </members>
</doc>
